name: CI Eksperimen MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DATA_PATH: "./train_preprocessing.csv"

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 2. Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          environment-file: MLProject/conda.yaml
          activate-environment: titanic-env
          python-version: '3.9'

      - name: 3. Install pip dependencies
        shell: bash -l {0}
        run: |
          pip install mlflow>=2.19.0 docker

      - name: 4. Run MLflow Project
        shell: bash -l {0}
        run: |
          mlflow run ./MLProject --env-manager=conda -P data_path=${{ env.DATA_PATH }}

      - name: 5. List contents of mlruns
        shell: bash -l {0}
        run: |
          echo "ðŸ—‚ Contents of mlruns:"
          find mlruns/0

      - name: 6. Get latest run_id
        id: get_run_id
        shell: bash -l {0}
        run: |
          RUN_ID=$(find mlruns/0 -type d -path "*/artifacts/model" | sort | tail -n1 | cut -d'/' -f3)
          if [ -z "$RUN_ID" ]; then
            echo "No MLflow model artifact found."
            exit 1
          fi
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id from model artifact: $RUN_ID"

      - name: 7. Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 8. Build Docker Image from MLflow Model
        shell: bash -l {0}
        run: |
          echo "Checking model URI..."
          echo "Using run ID: $RUN_ID"
          ls -l "mlruns/0/$RUN_ID/artifacts/model"
          mlflow models build-docker --model-uri "mlruns/0/$RUN_ID/artifacts/model" --name mlflow-model

      - name: 9. Tag Docker Image
        run: |
          docker tag mlflow-model ${{ secrets.DOCKER_USERNAME }}/mlflow-model:latest

      - name: 10. Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mlflow-model:latest

      - name: 11. Move MLflow artifacts to MLProject folder
        shell: bash -l {0}
        run: |
          mkdir -p MLProject/mlruns
          cp -r mlruns/0 "MLProject/mlruns/"

      - name: 12. Commit and Push MLflow artifacts to GitHub
        shell: bash -l {0}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://github.com/${{ github.repository }}
          git add MLProject/mlruns/
          git commit -m "Add MLflow artifacts for run $RUN_ID" || echo "No changes to commit"
          git push origin main
